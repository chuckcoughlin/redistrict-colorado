<!-- Build and deploy the viewer and analysis applications, plus all dependencies - locally -->
<project name="redistrict.install" default="all" basedir=".">
	<import file="${basedir}/build.xml"/>
	
	<!-- This target will build the complete collection of tools and jar files they depend on. 
		 jar files are copied to ${lib.dir}, execution scripts to ${bin.dir}
	 -->
	<target name="all" depends="clean, build, deploy" />
	
	<!-- Remove the existing target -->
	<target name="clean" description="Remove existing build products">
		<delete dir="${temp.dir}"/>
		<mkdir dir="${temp.dir}"/>
		<delete dir="${lib.dir}"/>
		<mkdir dir="${lib.dir}"/>
		<delete dir="${bin.dir}/bin"/>
		<mkdir dir="${bin.dir}/bin"/>
		<delete dir="${install.dir}/bin"/>
		<mkdir dir="${install.dir}/bin"/>
	</target>
	
	<target name="build" depends="cts,jump-core,jump-ui,shape-viewer" />
	<target name="cts" description="Build CTS jar">
		<echo message="Compile CTS" />
		<delete dir="${temp.dir}" />
		<mkdir dir="${temp.dir}"/>
		<javac	srcdir="../CTS/src"
			    destdir="${temp.dir}"
				compiler="javac10+"
				source="10" target="10"
				debug="true"
				modulepathref="common-modulepath"
				includeantruntime="false"
			/>
		<jar destfile="${lib.dir}/${cts-jar}" includes="**/*.class,**/*.png" basedir="${temp.dir}">
		</jar>
	</target>
	<target name="jump-core" description="Build OpenJUMP core jar">
		<echo message="Compile Open JUMP core" />
		<delete dir="${temp.dir}" />
		<mkdir dir="${temp.dir}"/>
		<javac	srcdir="../OpenJumpCore/src"
		       	destdir="${temp.dir}"
				compiler="javac10+"
				source="10" target="10"
				debug="true"
				modulepathref="common-modulepath"
				includeantruntime="false"
		/>
		<jar destfile="${lib.dir}/${jump-core-jar}" includes="**/*.class,**/*.png" basedir="${temp.dir}">
		</jar>
	</target>
	<target name="jump-ui" description="Build OpenJUMP UI jar">
		<echo message="Compile Open JUMP UI" />
		<delete dir="${temp.dir}" />
		<mkdir dir="${temp.dir}"/>
		<javac	srcdir="../OpenJumpUI/src"
		    	destdir="${temp.dir}"
				compiler="javac10+"
				source="10" target="10"
				debug="true"
				modulepathref="common-modulepath"
				includeantruntime="false"
		/>
	    <jar destfile="${lib.dir}/${jump-ui-jar}" includes="**/*.class,**/*.png" basedir="${temp.dir}"/>
	</target>
	<target name="map-analyzer" description="Build the Map Analyzer">
			<echo message="Compile the Map Analyzer" />
			<delete dir="${temp.dir}" />
			<mkdir dir="${temp.dir}"/>
			<javac	srcdir="MapAnalyzer"
					destdir="${temp.dir}"
					compiler="javac10+"
					source="10" target="10"
					debug="true"
					modulepathref="common-modulepath"
					includeantruntime="false"
			/>
			<jar destfile="${lib.dir}/${map-analyzer-jar}" includes="**/*.class,**/*.png" basedir="${temp.dir}">
				<manifest>
					<attribute name="Main-Class" value="redistrict.colorado.MapAnalyzer"/>
				</manifest>
			</jar>
		</target>
	<target name="shape-viewer" description="Build the Shapefile Viewer">
		<echo message="Compile the Shapefile Viewer" />
		<delete dir="${temp.dir}" />
		<mkdir dir="${temp.dir}"/>
		<javac	srcdir="../ShapeViewer/src"
				destdir="${temp.dir}"
				compiler="javac10+"
				source="10" target="10"
				debug="true"
				modulepathref="common-modulepath"
				includeantruntime="false"
		/>
		<jar destfile="${lib.dir}/${shape-viewer-jar}" includes="**/*.class,**/*.png" basedir="${temp.dir}">
			<manifest>
				<attribute name="Main-Class" value="redistrict.colorado.ShapefileViewer"/>
			</manifest>
		</jar>
	</target>
	
	<!-- Copy the new jar files and scripts into the installation area. -->
	<target name="deploy" >
		<echo message="Copying jar files into ${install.dir}/lib" />
		<mkdir dir="${install.dir}/lib" />
		<copy todir="${install.dir}/lib">
			<fileset dir="${lib.dir}">
				<include name="*.jar"/>
			</fileset>
		</copy>
		<echo message="Copying script files into ${install.dir}/bin" />
		<mkdir dir="${install.dir}/bin" />
		<copy todir="${install.dir}/bin">
			<fileset dir="${basedir}">
				<include name="*.sh"/>
			</fileset>
			</copy>
		<chmod dir="${install.dir}/bin" perm="ugo+rx"
			includes="*.sh"/>
	</target>		
</project>