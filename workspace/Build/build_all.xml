<!-- Build and deploy the viewer and analysis applications, plus all dependencies - locally -->
<project name="redistrict.install" default="all" basedir=".">
	<import file="${basedir}/build.xml"/>
	
	<!-- This target will build the complete collection of tools and jar files they depend on. 
		 jar files are copied to ${lib.dir}, execution scripts to ${bin.dir}
	 -->
	<target name="all" depends="clean, build, deploy" />
	
	<!-- Remove the existing target -->
	<target name="clean" description="Remove existing build products">
		<delete dir="${temp.dir}"/>
		<mkdir dir="${temp.dir}"/>
		<delete dir="${lib.dir}"/>
		<mkdir dir="${lib.dir}"/>
		<mkdir dir="${bin.dir}/bin"/>
		<delete dir="${bin.dir}/bin"/>
	</target>
	
	<target name="build" depends="core,ui,viewer" />
	<target name="core" description="Build OpenJUMP core jar">
		<echo message="Compile Open JUMP core" />
		<delete dir="${temp.dir}" />
		<mkdir dir="${temp.dir}"/>
		<javac	srcdir="../OpenJumpCore/src"
		       	destdir="${temp.dir}"
				compiler="javac10+"
				source="10" target="10"
				debug="true"
				modulepathref="common-modulepath"
				includeantruntime="false"
		/>
		<jar destfile="${lib.dir}/${jump-core-jar}" includes="**/*.class,**/*.png" basedir="${temp.dir}">
		</jar>
	</target>
	<target name="ui" description="Compile the database library">
		<echo message="Compile the database library" />
		<delete dir="${temp.dir}" />
		<mkdir dir="${temp.dir}"/>
		<javac	srcdir="../Database/src"
		       	destdir="${temp.dir}"
				compiler="javac10+"
				source="10" target="10"
				debug="true"
				modulepathref="common-modulepath"
				includeantruntime="false"
		/>
	    <jar destfile="${lib.dir}/bert-database.jar" includes="**/*.class,**/*.png" basedir="${temp.dir}"/>
	</target>
	<target name="viewer" description="Compile the dispatcher">
		<echo message="Compile the Server" />
		<delete dir="${temp.dir}" />
		<mkdir dir="${temp.dir}"/>
		<javac	srcdir="../Dispatcher/src"
				destdir="${temp.dir}"
				compiler="javac10+"
				source="10" target="10"
				debug="true"
				modulepathref="common-modulepath"
				includeantruntime="false"
			/>
			<jar destfile="${lib.dir}/bert-dispatcher.jar" includes="**/*.class,**/*.png" basedir="${temp.dir}">
				<manifest>
					 <attribute name="Main-Class" value="bert.dispatch.controller.Dispatcher"/>
				</manifest>
			</jar>
	</target>
	
	<!-- Copy the new jar files and scripts into the local deployment area. -->
	<target name="deploy" >
		<!-- Make substitutions in XML configuration file -->
		<antcall target="ReplacePlacehlders">
			<param name="template" value="${config.template}"/>
			<param name="result" value="${config.file}"/>
		</antcall>
		
		<echo message="Copying configuration files locally into ${bert.home}" />
		<mkdir dir="${robot.dir}/bin" />
		<copy todir="${robot.dir}/bin">
			<fileset dir="${bin.dir}" />
		</copy>
		<chmod dir="${robot.dir}/bin" perm="ugo+rx" includes="**/*.sh"/>
		<mkdir dir="${robot.dir}/etc" />
		<copy todir="${robot.dir}/etc">
			<fileset dir="${config.dir}" />
		</copy>
		<echo message="Copying jar files locally into ${bert.home}/lib" />
		<mkdir dir="${bert.home}/lib" />
		<copy todir="${bert.home}/lib">
			<fileset dir="${lib.dir}">
				<include name="*.jar"/>
			</fileset>
		</copy>
		<chmod dir="${robot.dir}/lib" perm="ugo+rx" includes="**/*.jar"/>
		<echo message="Copying modules locally into ${bert.home}/mods" />
		<mkdir dir="${bert.home}/mods" />
		<copy todir="${bert.home}/mods">
			<fileset dir="${archive.dir}">
				<include name="*.jar"/>
			</fileset>
		</copy>
		<chmod dir="${robot.dir}/mods" perm="ugo+rx" includes="**/*.jar"/>
	</target>			
</project>